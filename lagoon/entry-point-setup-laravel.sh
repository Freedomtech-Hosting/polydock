#!/bin/sh

echo "$ Autogenerated by Lagoon"

# Loading environment variables from .env and friends
source /lagoon/entrypoints/50-dotenv.sh

# Generate some additional enviornment variables
source /lagoon/entrypoints/55-generate-env.sh

if [ -z $APP_URL ]; then
      echo "Settng APP_URL to $LAGOON_ROUTE"
      export APP_URL=$LAGOON_ROUTE
      echo "APP_URL=$LAGOON_ROUTE" >> /app/.env
fi

if [ "$APP_ENV" == "local" ]; then
      echo "Settng APP_ENV to $LAGOON_ENVIRONMENT"
      export APP_ENV=$LAGOON_ENVIRONMENT
      echo "APP_ENV=$LAGOON_ENVIRONMENT" >> /app/.env
fi

if [ -z $APP_ENV ]; then
      echo "Settng APP_ENV to $LAGOON_ENVIRONMENT"
      export APP_ENV=$LAGOON_ENVIRONMENT
      echo "APP_ENV=$LAGOON_ENVIRONMENT" >> /app/.env
fi

if [ ! -z "$VITE" ]; then
      echo "VITE detected: $VITE"
else 
      echo "No VITE detected"
fi

mkdir -p /app/storage/framework/sessions
mkdir -p /app/storage/framework/views
mkdir -p /app/storage/framework/cache
mkdir -p /app/storage/framework/cache/data
mkdir -p /app/storage/app/public
mkdir -p /app/storage/logs
mkdir -p /app/storage/debugbar

fix-permissions /app/storage/framework
fix-permissions /app/storage/app
fix-permissions /app/storage/logs
fix-permissions /app/storage/debugbar

cd /app

php artisan config:clear
php artisan cache:clear
php artisan route:clear
php artisan view:clear
php artisan event:clear

if [ "$LAGOON_ENVIRONMENT_TYPE" == "production" ]; then
    php artisan config:cache
    php artisan route:cache
    php artisan view:cache
    php artisan event:cache
elif [ "$SERVICE_NAME" == "cli" ]; then
    TABLES=`echo "show tables" | mysql -h$DB_HOST -u$DB_USERNAME -p$DB_PASSWORD $DB_DATABASE`

    if [ -z "$TABLES" ]; then
      echo "Loading up a new database"
      php artisan migrate:fresh --force
      php artisan db:seed --force
    else
      php artisan migrate --force
      echo "There is already a database loaded up"
    fi
fi
